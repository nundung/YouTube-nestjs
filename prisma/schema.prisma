generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subscription {
  id                                     String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId                                 String    @map("user_id") @db.Uuid
  subscribedUserId                       String    @map("subscribed_user_id") @db.Uuid
  createdAt                              DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  deletedAt                              DateTime? @map("deleted_at") @db.Timestamp(6)
  userSubscriptionSubscribedUserIdTouser User      @relation("subscription_subscribed_user_idTouser", fields: [subscribedUserId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userSubscriptionUserIdTouser           User      @relation("subscription_user_idTouser", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("subscription")
}

model User {
  id                                             String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                                           String         @unique @db.VarChar(255)
  pw                                             String         @db.VarChar(255)
  createdAt                                      DateTime?      @default(now()) @map("created_at") @db.Timestamp(6)
  deletedAt                                      DateTime?      @map("deleted_at") @db.Timestamp(6)
  subscriptionSubscriptionSubscribedUserIdTouser Subscription[] @relation("subscription_subscribed_user_idTouser")
  subscriptionSubscriptionUserIdTouser           Subscription[] @relation("subscription_user_idTouser")
  video                                          Video[]

  @@map("user")
}

model Video {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId      String    @map("user_id") @db.Uuid
  filePath    String    @map("file_path") @db.VarChar(255)
  title       String    @db.VarChar(255)
  description String?
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamp(6)
  user        User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("video")
}
